CREATE TABLE IF NOT EXISTS utilisateur (
    user_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    nom VARCHAR(50) NOT NULL,
    prenom VARCHAR(50) NOT NULL,
    groupe_sanguin VARCHAR(3) NOT NULL,
    genre VARCHAR(20) NOT NULL,
    date_naissance DATE NOT NULL,
    adresse VARCHAR(255) NOT NULL,
    telephone VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS administrateur (
    admin_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    nom VARCHAR(50) NOT NULL,
    prenom VARCHAR(50) NOT NULL,
    telephone VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS hopital (
   hopital_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
   nom VARCHAR(50) NOT NULL,
   adresse VARCHAR(255) NOT NULL,
   mail VARCHAR(255) NOT NULL,
   telephone VARCHAR(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS commentaire (
    commentaire_id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    texte TEXT NOT NULL ,
    user_id INT UNIQUE NOT NULL,
    FOREIGN KEY(user_id) REFERENCES utilisateur(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS information_utilisateur (
    mail VARCHAR(255) PRIMARY KEY,
    hash_password VARCHAR(255) NOT NULL,
    user_id INT UNIQUE NOT NULL,
    FOREIGN KEY(user_id) REFERENCES utilisateur(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS information_administrateur (
    mail VARCHAR(255) PRIMARY KEY,
    hash_password VARCHAR(255) NOT NULL,
    admin_id INT UNIQUE NOT NULL,
    FOREIGN KEY(admin_id) REFERENCES administrateur(admin_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS rendez_vous (
    user_id INT,
    hopital_id INT,
    date_rdv DATE NOT NULL,
    type_rdv VARCHAR(20) NOT NULL,
    status VARCHAR(20) NOT NULL,
    information VARCHAR(255),
    PRIMARY KEY (user_id, hopital_id),
    FOREIGN KEY(user_id) REFERENCES utilisateur(user_id) ON DELETE CASCADE,
    FOREIGN KEY(hopital_id) REFERENCES hopital(hopital_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS poche_sang (
    user_id INT,
    hopital_id INT,
    date_donnation DATE NOT NULL,
    PRIMARY KEY (user_id, hopital_id),
    FOREIGN KEY(user_id) REFERENCES utilisateur(user_id) ON DELETE CASCADE,
    FOREIGN KEY(hopital_id) REFERENCES hopital(hopital_id) ON DELETE CASCADE
);